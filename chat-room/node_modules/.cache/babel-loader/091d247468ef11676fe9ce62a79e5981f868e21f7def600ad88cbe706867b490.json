{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport { io } from 'socket.io-client';\nimport { useRoute } from 'vue-router';\nexport default {\n  name: 'ChatRoom',\n  setup() {\n    const message = ref('');\n    const socket = io('http://localhost:3000');\n    const route = useRoute();\n    let roomName = route.query.roomName;\n    let sendData = socket.on('connect', () => {\n      console.log('connected to server');\n    });\n    socket.emit('join', roomName);\n    const sendMessage = msg => {\n      socket.emit('message', msg);\n    };\n    onMounted(() => {\n      console.log('mounted');\n    });\n    onUnmounted(() => {\n      socket.emit('leave', roomName);\n    });\n    function inputMessage(e) {\n      message.value = e.target.value;\n    }\n    function send() {\n      socket.emit('send', message.value).then(() => {\n        message.value = '';\n      });\n    }\n    return {\n      message,\n      sendMessage,\n      roomName,\n      inputMessage,\n      send\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","io","useRoute","name","setup","message","socket","route","roomName","query","sendData","on","console","log","emit","sendMessage","msg","inputMessage","e","value","target","send","then"],"sources":["/Users/kgj/Library/Mobile Documents/com~apple~CloudDocs/공유/University/4-1/종프2/chatClient/chat-room/src/components/ChatRoom.vue"],"sourcesContent":["<template>\n  {{ roomName }}\n  <input v-bind:value=\"message\" @input=\"inputMessage\" type=\"text\">\n  <button @click=\"send\">send</button>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport { io } from 'socket.io-client'\nimport { useRoute } from 'vue-router';\nexport default {\n  name : 'ChatRoom',\n  setup() {\n    const message = ref('');\n    const socket = io('http://localhost:3000');\n    const route = useRoute();\n    let roomName = route.query.roomName;\n    let sendData = \n    socket.on('connect', () => {\n      console.log('connected to server');\n    });\n\n    socket.emit('join', roomName);\n   \n\n    const sendMessage = (msg) => {\n      socket.emit('message', msg);\n    };\n\n    onMounted(() => {\n      console.log('mounted');\n    });\n\n    onUnmounted(()=>{\n      socket.emit('leave', roomName);\n    });\n\n    function inputMessage(e) {\n      message.value = e.target.value;\n    }\n\n    function send() {\n      socket.emit('send', message.value)\n      .then(()=>{\n        message.value = '';\n      });\n      \n    }\n\n\n    return {\n      message,\n      sendMessage, roomName, inputMessage, send\n    };\n  }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":"AAOA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAI;AAChD,SAASC,EAAC,QAAS,kBAAiB;AACpC,SAASC,QAAO,QAAS,YAAY;AACrC,eAAe;EACbC,IAAG,EAAI,UAAU;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAIP,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMQ,MAAK,GAAIL,EAAE,CAAC,uBAAuB,CAAC;IAC1C,MAAMM,KAAI,GAAIL,QAAQ,EAAE;IACxB,IAAIM,QAAO,GAAID,KAAK,CAACE,KAAK,CAACD,QAAQ;IACnC,IAAIE,QAAO,GACXJ,MAAM,CAACK,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;IAEFP,MAAM,CAACQ,IAAI,CAAC,MAAM,EAAEN,QAAQ,CAAC;IAG7B,MAAMO,WAAU,GAAKC,GAAG,IAAK;MAC3BV,MAAM,CAACQ,IAAI,CAAC,SAAS,EAAEE,GAAG,CAAC;IAC7B,CAAC;IAEDjB,SAAS,CAAC,MAAM;MACda,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC,CAAC;IAEFb,WAAW,CAAC,MAAI;MACdM,MAAM,CAACQ,IAAI,CAAC,OAAO,EAAEN,QAAQ,CAAC;IAChC,CAAC,CAAC;IAEF,SAASS,YAAYA,CAACC,CAAC,EAAE;MACvBb,OAAO,CAACc,KAAI,GAAID,CAAC,CAACE,MAAM,CAACD,KAAK;IAChC;IAEA,SAASE,IAAIA,CAAA,EAAG;MACdf,MAAM,CAACQ,IAAI,CAAC,MAAM,EAAET,OAAO,CAACc,KAAK,EAChCG,IAAI,CAAC,MAAI;QACRjB,OAAO,CAACc,KAAI,GAAI,EAAE;MACpB,CAAC,CAAC;IAEJ;IAGA,OAAO;MACLd,OAAO;MACPU,WAAW;MAAEP,QAAQ;MAAES,YAAY;MAAEI;IACvC,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}