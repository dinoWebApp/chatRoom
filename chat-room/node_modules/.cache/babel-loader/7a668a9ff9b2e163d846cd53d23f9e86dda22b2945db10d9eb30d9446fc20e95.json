{"ast":null,"code":"import { toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _toDisplayString($setup.roomName);\n}","map":{"version":3,"names":["$setup","roomName"],"sources":["/Users/kgj/Library/Mobile Documents/com~apple~CloudDocs/공유/University/4-1/종프2/chatClient/chat-room/src/components/ChatRoom.vue"],"sourcesContent":["<template>\n  {{ roomName }}\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport { io } from 'socket.io-client'\nimport { useRoute } from 'vue-router';\nexport default {\n  name : 'ChatRoom',\n  setup() {\n    const messages = ref([]);\n    const socket = io('http://localhost:3000');\n    const route = useRoute();\n    let roomName = route.query.roomName;\n    socket.on('connect', () => {\n      console.log('connected to server');\n    });\n\n    socket.emit('join', roomName);\n\n    socket.on('message', (msg) => {\n      messages.value.push(msg);\n    });\n\n    const sendMessage = (msg) => {\n      socket.emit('message', msg);\n    };\n\n    onMounted(() => {\n      console.log('mounted');\n    });\n\n    onUnmounted(()=>{\n      \n    })\n\n\n    return {\n      messages,\n      sendMessage, roomName\n    };\n  }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";;0BACKA,MAAA,CAAAC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}