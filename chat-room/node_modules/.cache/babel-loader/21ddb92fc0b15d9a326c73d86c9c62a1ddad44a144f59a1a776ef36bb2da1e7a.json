{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, \" sd \");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["/Users/kgj/Library/Mobile Documents/com~apple~CloudDocs/공유/University/4-1/종프2/chatClient/chat-room/src/components/HomePage.vue"],"sourcesContent":["<template>\n  <div>\n    sd\n  </div>\n</template>\n\n<script>\nimport io from 'socket.io-client'\nimport { onMounted, onUnmounted, ref } from 'vue';\nexport default {\n  name: 'HomePage',\n  setup() {\n    const socket = io('/api');\n    const isConnected = ref(false);\n\n    const onConnect = ()=>{\n      isConnected.value = true;\n      console.log('Socket.IO client connected');\n    }\n     // 연결 실패 시 호출될 함수\n     const onConnectError = (err) => {\n      console.log('Socket.IO connection error:', err);\n    };\n\n    // 연결 종료 시 호출될 함수\n    const onDisconnect = () => {\n      isConnected.value = false;\n      console.log('Socket.IO client disconnected');\n    };\n\n    // Socket.IO 이벤트 리스너 등록\n    onMounted(() => {\n      socket.on('connect', onConnect);\n      socket.on('connect_error', onConnectError);\n      socket.on('disconnect', onDisconnect);\n    });\n\n    // Socket.IO 이벤트 리스너 제거\n    onUnmounted(() => {\n      socket.off('connect', onConnect);\n      socket.off('connect_error', onConnectError);\n      socket.off('disconnect', onDisconnect);\n    });\n    return {socket};\n  }\n}\n</script>\n\n\n<style scoped>\n\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAEM,aAFD,MAEL"},"metadata":{},"sourceType":"module","externalDependencies":[]}