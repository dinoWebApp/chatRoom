{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.message = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Send\"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, msg => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: msg.id\n    }, _toDisplayString(msg.text), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","type","$data","message","$event","onClick","_cache","args","$options","sendMessage","_Fragment","_renderList","messages","msg","key","id","text"],"sources":["/Users/kgj/Library/Mobile Documents/com~apple~CloudDocs/공유/University/4-1/종프2/chatClient/chat-room/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"text\" v-model=\"message\" />\n    <button @click=\"sendMessage\">Send</button>\n    <ul>\n      <li v-for=\"msg in messages\" :key=\"msg.id\">{{ msg.text }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport io from 'socket.io-client';\n\nexport default {\n  data() {\n    return {\n      message: '',\n      messages: [],\n    };\n  },\n  mounted() {\n    const socket = io('http://localhost:3000');\n\n    socket.on('connect', () => {\n      console.log('connected to server');\n    });\n\n    socket.on('message', (msg) => {\n      this.messages.push(msg);\n    });\n\n    this.socket = socket;\n  },\n  methods: {\n    sendMessage() {\n      const msg = {\n        id: Date.now(),\n        text: this.message,\n      };\n      this.socket.emit('message', msg);\n      this.message = '';\n    },\n  },\n};\n</script>\n\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAMM,c,gBALJC,mBAAA,CAAuC;IAAhCC,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,OAAO,GAAAC,MAAA;iDAAPF,KAAA,CAAAC,OAAO,E,GACnCH,mBAAA,CAA0C;IAAjCK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,MAAI,GACjCP,mBAAA,CAEK,c,kBADHD,mBAAA,CAA6DW,SAAA,QAAAC,WAAA,CAA3CT,KAAA,CAAAU,QAAQ,EAAfC,GAAG;yBAAdd,mBAAA,CAA6D;MAAhCe,GAAG,EAAED,GAAG,CAACE;wBAAOF,GAAG,CAACG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}