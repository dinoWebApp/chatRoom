{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex\"\n};\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"content\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, _toDisplayString($setup.roomName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    value: $setup.message,\n    onInput: _cache[0] || (_cache[0] = (...args) => $setup.inputMessage && $setup.inputMessage(...args)),\n    type: \"text\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_2)]), _hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.push && $setup.push(...args)),\n    class: \"btn btn-danger\"\n  }, \"push1\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_toDisplayString","$setup","roomName","_hoisted_1","value","message","onInput","_cache","args","inputMessage","type","_hoisted_3","onClick","push"],"sources":["/Users/kgj/Library/Mobile Documents/com~apple~CloudDocs/공유/University/4-1/종프2/chatClient/chat-room/src/components/ChatRoom.vue"],"sourcesContent":["<template>\n  <div>\n    {{ roomName }}\n  </div>\n  <div class=\"d-flex\">\n    <input v-bind:value=\"message\" @input=\"inputMessage\" type=\"text\">\n  </div>\n\n  <div id=\"content\">\n  \n  </div>\n  \n  <button @click=\"push\" class=\"btn btn-danger\">push1</button>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport { io } from 'socket.io-client'\nimport { useRoute } from 'vue-router';\nexport default {\n  name : 'ChatRoom',\n  setup() {\n    let message = ref('');\n    const socket = io('http://localhost:3000');\n    const route = useRoute();\n    let roomName = route.query.roomName;\n    let nickName = route.query.nickName;\n\n    socket.on('connect', () => {\n      console.log('connected to server');\n    });\n\n    socket.emit('join', roomName);\n\n    socket.on('broadcast', (data)=>{\n      console.log(data);\n      \n      let txt = document.createTextNode(data+'\\n');\n      document.getElementById('content').appendChild(txt);\n    })\n\n\n    onMounted(() => {\n      console.log('mounted');\n    });\n\n    onUnmounted(()=>{\n      socket.emit('leave', roomName);\n    });\n\n    function inputMessage(e) {\n      message.value = e.target.value;\n      console.log(message.value);\n    }\n\n    function send() {\n      let sendData = {\n        roomName : roomName,\n        message : message.value\n      }\n      socket.emit('send', sendData);\n      \n    }\n\n    function push() {\n      socket.emit('push', 'chatroom2');\n    }\n\n    return {\n      message,\n      roomName, inputMessage, send, push, nickName\n    };\n  }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";;;EAIOA,KAAK,EAAC;AAAQ;;gCAInBC,mBAAA,CAEM;EAFDC,EAAE,EAAC;AAAS;;;6DAPjBD,mBAAA,CAEM,aAAAE,gBAAA,CADDC,MAAA,CAAAC,QAAQ,kBAEbJ,mBAAA,CAEM,OAFNK,UAEM,GADJL,mBAAA,CAAgE;IAAlDM,KAAK,EAAEH,MAAA,CAAAI,OAAO;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAQ,YAAA,IAAAR,MAAA,CAAAQ,YAAA,IAAAD,IAAA,CAAY;IAAEE,IAAI,EAAC;0DAG3DC,UAEM,EAENb,mBAAA,CAA2D;IAAlDc,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAY,IAAA,IAAAZ,MAAA,CAAAY,IAAA,IAAAL,IAAA,CAAI;IAAEX,KAAK,EAAC;KAAiB,OAAK,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}