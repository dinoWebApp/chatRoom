{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport { io } from 'socket.io-client';\nimport { useRoute } from 'vue-router';\nexport default {\n  name: 'ChatRoom',\n  setup() {\n    let message = ref('');\n    const socket = io('http://localhost:3000');\n    const route = useRoute();\n    let roomName = route.query.roomName;\n    let sendData = ref({\n      roomName: roomName,\n      message: message.value\n    });\n    socket.on('connect', () => {\n      console.log('connected to server');\n    });\n    socket.emit('join', roomName);\n    const sendMessage = msg => {\n      socket.emit('message', msg);\n    };\n    onMounted(() => {\n      console.log('mounted');\n    });\n    onUnmounted(() => {\n      socket.emit('leave', roomName);\n    });\n    function inputMessage(e) {\n      message.value = e.target.value;\n    }\n    function send() {\n      socket.emit('send', sendData.value);\n    }\n    return {\n      message,\n      sendMessage,\n      roomName,\n      inputMessage,\n      send\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","io","useRoute","name","setup","message","socket","route","roomName","query","sendData","value","on","console","log","emit","sendMessage","msg","inputMessage","e","target","send"],"sources":["/Users/kgj/Library/Mobile Documents/com~apple~CloudDocs/공유/University/4-1/종프2/chatClient/chat-room/src/components/ChatRoom.vue"],"sourcesContent":["<template>\n  {{ roomName }}\n  <input v-bind:value=\"message\" @input=\"inputMessage\" type=\"text\">\n  <button @click=\"send\">send</button>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport { io } from 'socket.io-client'\nimport { useRoute } from 'vue-router';\nexport default {\n  name : 'ChatRoom',\n  setup() {\n    let message = ref('');\n    const socket = io('http://localhost:3000');\n    const route = useRoute();\n    let roomName = route.query.roomName;\n    let sendData = ref({\n      roomName : roomName,\n      message : message.value\n    })\n    socket.on('connect', () => {\n      console.log('connected to server');\n    });\n\n    socket.emit('join', roomName);\n   \n\n    const sendMessage = (msg) => {\n      socket.emit('message', msg);\n    };\n\n    onMounted(() => {\n      console.log('mounted');\n    });\n\n    onUnmounted(()=>{\n      socket.emit('leave', roomName);\n    });\n\n    function inputMessage(e) {\n      message.value = e.target.value;\n    }\n\n    function send() {\n      socket.emit('send', sendData.value)\n      \n      \n    }\n\n\n    return {\n      message,\n      sendMessage, roomName, inputMessage, send\n    };\n  }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":"AAOA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAI;AAChD,SAASC,EAAC,QAAS,kBAAiB;AACpC,SAASC,QAAO,QAAS,YAAY;AACrC,eAAe;EACbC,IAAG,EAAI,UAAU;EACjBC,KAAKA,CAAA,EAAG;IACN,IAAIC,OAAM,GAAIP,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMQ,MAAK,GAAIL,EAAE,CAAC,uBAAuB,CAAC;IAC1C,MAAMM,KAAI,GAAIL,QAAQ,EAAE;IACxB,IAAIM,QAAO,GAAID,KAAK,CAACE,KAAK,CAACD,QAAQ;IACnC,IAAIE,QAAO,GAAIZ,GAAG,CAAC;MACjBU,QAAO,EAAIA,QAAQ;MACnBH,OAAM,EAAIA,OAAO,CAACM;IACpB,CAAC;IACDL,MAAM,CAACM,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;IAEFR,MAAM,CAACS,IAAI,CAAC,MAAM,EAAEP,QAAQ,CAAC;IAG7B,MAAMQ,WAAU,GAAKC,GAAG,IAAK;MAC3BX,MAAM,CAACS,IAAI,CAAC,SAAS,EAAEE,GAAG,CAAC;IAC7B,CAAC;IAEDlB,SAAS,CAAC,MAAM;MACdc,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC,CAAC;IAEFd,WAAW,CAAC,MAAI;MACdM,MAAM,CAACS,IAAI,CAAC,OAAO,EAAEP,QAAQ,CAAC;IAChC,CAAC,CAAC;IAEF,SAASU,YAAYA,CAACC,CAAC,EAAE;MACvBd,OAAO,CAACM,KAAI,GAAIQ,CAAC,CAACC,MAAM,CAACT,KAAK;IAChC;IAEA,SAASU,IAAIA,CAAA,EAAG;MACdf,MAAM,CAACS,IAAI,CAAC,MAAM,EAAEL,QAAQ,CAACC,KAAK;IAGpC;IAGA,OAAO;MACLN,OAAO;MACPW,WAAW;MAAER,QAAQ;MAAEU,YAAY;MAAEG;IACvC,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}