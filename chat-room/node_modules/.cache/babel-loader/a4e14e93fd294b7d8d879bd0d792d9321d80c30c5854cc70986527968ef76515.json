{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  align: \"center\",\n  class: \"container\"\n};\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  class: \"container\",\n  align: \"center\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  align: \"center\",\n  id: \"content\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, _toDisplayString($setup.roomName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"input\", {\n    value: $setup.message,\n    onInput: _cache[0] || (_cache[0] = (...args) => $setup.inputMessage && $setup.inputMessage(...args)),\n    type: \"text\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_2), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.send && $setup.send(...args))\n  }, \"send\")])]), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item\n    }, _toDisplayString(item.nickName) + \" : \" + _toDisplayString(item.message), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_4])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["align","class","_createElementVNode","id","_toDisplayString","$setup","roomName","_hoisted_1","value","message","onInput","_cache","args","inputMessage","type","onClick","send","_hoisted_3","_createElementBlock","_Fragment","_renderList","messages","item","key","nickName","_hoisted_4"],"sources":["/Users/kgj/Library/Mobile Documents/com~apple~CloudDocs/공유/University/4-1/종프2/chatClient/chat-room/src/components/ChatRoom.vue"],"sourcesContent":["<template>\n  <div>\n    {{ roomName }}\n  </div>\n  <div align=\"center\" class=\"container\"> \n    <div>\n      <input v-bind:value=\"message\" @input=\"inputMessage\" type=\"text\">\n      <button @click=\"send\">send</button>\n    </div>\n  </div>\n\n  <div class=\"container\" align=\"center\">\n    <div v-for=\"item in messages\" :key=\"item\">\n      {{ item.nickName }} : {{ item.message }}\n    </div>\n    <div align=\"center\" id=\"content\">\n    \n    </div>\n  </div>\n  \n\n  \n  \n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport { io } from 'socket.io-client'\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  name : 'ChatRoom',\n  setup() {\n    let message = ref('');\n    const socket = io('http://localhost:3000');\n    const route = useRoute();\n    let roomName = route.query.roomName;\n    let nickName = route.query.nickName;\n    let messages = ref([]);\n\n    axios.get('/api/chatRoom?roomName=' + route.query.roomName)\n    .then(res=>{\n      messages.value = res.data;\n    })\n    .catch(err=>{\n      console.log(err);\n    })\n    \n\n    socket.on('connect', () => {\n      console.log('connected to server');\n    });\n\n    socket.emit('join', roomName);\n\n    socket.on('broadcast', (data)=>{\n      console.log(data);\n      \n      let txt = document.createTextNode(data.nickName+':'+data.message);\n      document.getElementById('content').appendChild(txt);\n    })\n\n\n    onMounted(() => {\n      console.log('mounted');\n    });\n\n    onUnmounted(()=>{\n      socket.emit('leave', roomName);\n    });\n\n    function inputMessage(e) {\n      message.value = e.target.value;\n    }\n\n    function send() {\n      let sendData = {\n        roomName : roomName,\n        message : message.value,\n        nickName : nickName\n      }\n      socket.emit('send', sendData);\n      \n    }\n\n    function push() {\n      socket.emit('push', 'chatroom2');\n    }\n\n    return {\n      message,\n      roomName, inputMessage, send, push, nickName, messages\n    };\n  }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";;EAIOA,KAAK,EAAC,QAAQ;EAACC,KAAK,EAAC;;;;EAOrBA,KAAK,EAAC,WAAW;EAACD,KAAK,EAAC;;gCAI3BE,mBAAA,CAEM;EAFDF,KAAK,EAAC,QAAQ;EAACG,EAAE,EAAC;;;;6DAdzBD,mBAAA,CAEM,aAAAE,gBAAA,CADDC,MAAA,CAAAC,QAAQ,kBAEbJ,mBAAA,CAKM,OALNK,UAKM,GAJJL,mBAAA,CAGM,cAFJA,mBAAA,CAAgE;IAAlDM,KAAK,EAAEH,MAAA,CAAAI,OAAO;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAQ,YAAA,IAAAR,MAAA,CAAAQ,YAAA,IAAAD,IAAA,CAAY;IAAEE,IAAI,EAAC;wDACzDZ,mBAAA,CAAmC;IAA1Ba,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAW,IAAA,IAAAX,MAAA,CAAAW,IAAA,IAAAJ,IAAA,CAAI;KAAE,MAAI,E,KAI9BV,mBAAA,CAOM,OAPNe,UAOM,I,kBANJC,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFcf,MAAA,CAAAgB,QAAQ,EAAhBC,IAAI;yBAAhBJ,mBAAA,CAEM;MAFyBK,GAAG,EAAED;IAAI,GAAAlB,gBAAA,CACnCkB,IAAI,CAACE,QAAQ,IAAG,KAAG,GAAApB,gBAAA,CAAGkB,IAAI,CAACb,OAAO;kCAEvCgB,UAEM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}